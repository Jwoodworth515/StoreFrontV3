@model StoreFrontV3.DATA.EF.Brand

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "BrandCreateForm" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal pushItDownBrandsCreate">
        @*<h4>Brand</h4>
        <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.BrandName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-4">
                @Html.EditorFor(model => model.BrandName, new { htmlAttributes = new { @class = "form-control", placeholder = "Brand" } })
                @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger" })
            </div>
        @*</div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-4">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        @*</div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State" + "Code" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        @*</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-1">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" + "Code" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        @*</div>

        <div class="form-group">*@
            <div class="col-md-1">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
